<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<schema name="default" version="1.4">
<!--  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml
-->
  <types>
    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in the
       org.apache.solr.analysis package.
    -->
    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>



    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>


    <!--
      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
    -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

    <!--
     Numeric field types that index each value at various levels of precision
     to accelerate range queries when the number of values between the range
     endpoints is large. See the javadoc for NumericRangeQuery for internal
     implementation details.

     Smaller precisionStep values (specified in bits) will lead to more tokens
     indexed per value, slightly larger index size, and faster range queries.
     A precisionStep of 0 disables indexing at different precision levels.
    -->
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
         Consult the DateField javadocs for more information.

         Note: For faster range queries, consider the tdate type
      -->
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

    <!-- A Trie based date field for faster date range queries and date faceting. -->
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>

    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldtype name="binary" class="solr.BinaryField"/>

    <!--  field type for sortMissingLast -->
    <fieldType class="solr.TrieDoubleField" name="sDouble" omitNorms="true" sortMissingLast="true"/>

	<!-- ISH: text type with german stemmer 
	solr.GermanStemFilterFactory suggested, alternatively other stemmer can be used ,  as described in  http://wiki.apache.org/solr/LanguageAnalysis#German 
        <filter class"solr.SnowballPorterFilterFactory" language="German" />       porter 2 stemmer 
        <filter class"solr.SnowballPorterFilterFactory" language="German2" />    porter 2 stemmer different umlaut handling
        <filter class="solr.GermanStemFilterFactory" />                                              fast and simple stemming algorithm
        <filter class="solr.GermanLightStemFilterFactory" />                                     lightweight stemmer
        <filter class="solr.GermanMinimalStemFilterFactory" />                               minimal stemmer, "less aggressiv"
    -->	
    <fieldType class="solr.TextField" name="textStemmed" omitNorms="true" positionIncrementGap="0">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" enablePositionIncrements="true" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
    <!-- german text stemmer   -->
        <filter class="solr.GermanStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="querystopwords.txt"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
    <!-- german text stemmer   -->
        <filter class="solr.GermanStemFilterFactory"/>
	</analyzer>
    </fieldType>

    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
        WordDelim parts) are removed.
        -->
    <fieldType class="solr.TextField" name="textSplitPhonetic" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!-- Case insensitive stop word removal.
          add enablePositionIncrements=true in both the index and query
          analyzers to leave a 'gap' for more accurate phrase queries.
        -->
        <filter class="solr.StopFilterFactory" enablePositionIncrements="true" ignoreCase="true" words="stopwords.txt"/>
        <filter catenateAll="0" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        <filter class="solr.PhoneticFilterFactory" encoder="DoubleMetaphone" inject="true"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="querystopwords.txt"/>
        <filter catenateAll="0" catenateNumbers="0" catenateWords="0" class="solr.WordDelimiterFilterFactory" generateNumberParts="1" generateWordParts="1" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        <filter class="solr.PhoneticFilterFactory" encoder="DoubleMetaphone" inject="true"/>
      </analyzer>
    </fieldType>
	
    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType class="solr.TextField" name="text" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <!-- use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="querystopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
	
	<!-- phonetic type for matching for sounds-like -->
    <fieldType name="textPhonetic" stored="false" indexed="true" class="solr.TextField" >
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.DoubleMetaphoneFilterFactory" inject="false"/>
      </analyzer>
    </fieldType>	
	
    <!--
     Setup simple analysis for spell checking
     -->
    <fieldType class="solr.TextField" name="textSpell" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
   
    <!-- 
     Field type for the _suggest field.
     The entire field value is kept as a single token, converted 
     to lower case for case insensitive search result -->
    <fieldType class="solr.TextField" name="suggestType">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- text type for matching ID fields such as SKU Can insert dashes/whitespace in the wrong place and still match. -->
    <fieldType class="solr.TextField" name="textID" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter catenateAll="1" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- text type splits on whitespace concatenates word and numbers; e.g. for matching suggest wild card searches -->
    <fieldType class="solr.TextField" name="textSplitConcat" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter catenateAll="1" catenateNumbers="1" catenateWords="1" class="solr.WordDelimiterFilterFactory" generateNumberParts="0" generateWordParts="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
    
    <!-- text type for sorting specific to a language, no language defines Unicode default sorting -->
	<fieldType name="textCollated" class="solr.TextField">
	  <analyzer>
	    <tokenizer class="solr.KeywordTokenizerFactory"/>
	    <filter class="solr.CollationKeyFilterFactory"
	        language="de"
	        strength="primary"
	    />
	  </analyzer>
	</fieldType>    
	    
  </types>

 <fields>   
  <!-- ISH: the UUID field is present for all indexes as a required attribute and to force uniqueness.
       See uniqueKey below.
   -->
  <field indexed="true" multiValued="false" name="UUID" required="true" stored="true" type="string"/>

  <!-- a internal field, fields starting with _ are kept here and are not removed from ISH back-office Indexed Attributes -->
  <field indexed="true" multiValued="true" name="_spell" stored="true" type="textSpell"/>
  <field indexed="true" multiValued="true" name="_suggest" stored="true" type="suggestType"/>

  <!-- a dynamic field used for searchable string/text attributes that should be sortable -->
  <dynamicField indexed="true" name="_s_*" stored="false" type="textCollated"/>  
  
  <!-- a dynamic field used for Category Position attribute used for sorting -->
  <dynamicField indexed="true" name="CategoryPosition_*" stored="false" type="sDouble"/> 
 
  
  <!-- ISH: all other fields are initially created and updated from the index configuration
            but can be changed later on.
   -->
 <field indexed="true" multiValued="true" name="CategoryUUIDLevelMulti" stored="true" type="string"/>
<field indexed="true" name="CategoryNameLevel0" stored="true" type="textStemmed"/>
<field indexed="true" name="CategoryNameLevel1" stored="true" type="textStemmed"/>
<field indexed="true" name="CategoryNameLevel2" stored="true" type="textStemmed"/>
<field indexed="true" name="CategoryNameLevel3" stored="true" type="textStemmed"/>
<field indexed="true" name="CategoryNameLevel4" stored="true" type="text"/>
<field indexed="true" name="CategoryNameLevel5" stored="true" type="textStemmed"/>
<field indexed="true" multiValued="true" name="SKU" stored="true" type="textID"/>
<field indexed="true" name="ManufacturerName" stored="true" type="string"/>
<field indexed="true" name="SupplierName" stored="true" type="string"/>
<field indexed="true" name="name" stored="true" type="textStemmed"/>
<field indexed="true" name="ProductSalePriceNet" stored="true" type="double"/>
<field indexed="true" name="ProductSalePriceGross" stored="true" type="double"/>
<field indexed="true" name="longDescription" stored="true" type="textStemmed"/>
<field indexed="true" name="shortDescription" stored="true" type="textStemmed"/>
<field indexed="true" multiValued="true" name="text" stored="true" type="text"/>


<field indexed="true" name="CatalogDomainName" stored="true" type="string"/>
<field indexed="true" multiValued="true" name="CategoryNames" stored="true" type="string"/>
<field indexed="true" name="SalesRankUnitsIndex" stored="true" type="int"/>
<field indexed="true" name="ArrivalDate" stored="true" type="date"/>
<field indexed="true" multiValued="true" name="Attr_Color" stored="true" type="string"/>
<field indexed="true" multiValued="true" name="Attr_Size" stored="true" type="string"/>




<field indexed="true" name="IcecatCategoryID" stored="true" type="string"/>
<field indexed="true" multiValued="true" name="Colour_of_product" stored="true" type="string"/>
<field indexed="true" multiValued="true" name="Hard_disk_drive_capacity" stored="true" type="string"/>
<field indexed="true" name="MemClockSpeed" stored="true" type="tint"/>
<field indexed="true" multiValued="true" name="PromotionUUID" stored="true" type="string"/>
<field indexed="true" name="OnlineFlag" stored="true" type="int"/>
<field indexed="true" name="OnlineFrom" stored="true" type="date"/>
<field indexed="true" name="OnlineTo" stored="true" type="date"/>
<field indexed="true" name="CategoryPosition" stored="true" type="sDouble"/>
<field indexed="true" name="ProductListPrice" stored="true" type="double"/>
</fields>

 <!-- field to use to determine and enforce document uniqueness. -->
 <uniqueKey>UUID</uniqueKey>

<copyField dest="_suggest" maxChars="300" source="ManufacturerName"/>
<copyField dest="_suggest" maxChars="300" source="SupplierName"/>
<copyField dest="_suggest" maxChars="300" source="CategoryNameLevel5"/>
<copyField dest="_suggest" maxChars="300" source="CategoryNameLevel4"/>
<copyField dest="_suggest" maxChars="300" source="CategoryNameLevel3"/>
<copyField dest="_suggest" maxChars="300" source="CategoryNameLevel2"/>
<copyField dest="_suggest" maxChars="300" source="CategoryNameLevel1"/>
<copyField dest="_suggest" maxChars="300" source="CategoryNameLevel0"/>
<copyField dest="_spell" maxChars="300" source="ManufacturerName"/>
<copyField dest="_spell" maxChars="300" source="SupplierName"/>
<copyField dest="_spell" maxChars="300" source="CategoryNameLevel5"/>
<copyField dest="_spell" maxChars="300" source="CategoryNameLevel4"/>
<copyField dest="_spell" maxChars="300" source="CategoryNameLevel3"/>
<copyField dest="_spell" maxChars="300" source="CategoryNameLevel2"/>
<copyField dest="_spell" maxChars="300" source="CategoryNameLevel1"/>
<copyField dest="_spell" maxChars="300" source="CategoryNameLevel0"/>
<copyField dest="_s_name" maxChars="300" source="name"/>
</schema>
