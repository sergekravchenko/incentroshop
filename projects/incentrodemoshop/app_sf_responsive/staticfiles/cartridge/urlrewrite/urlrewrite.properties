#############################################################################
#
# urlrewrite.properties
#
# This file provides initial URL rewrite rules for the default
# Intershop consumer channel storefront. It is strongly
# recommended - required in most cases - to override these example rules
# and to adapt it to the actual needs.
# Projects with active development should also consider implementing a 
# custom rewrite handler.
# 
# Custom rewrite rules can be placed in a custom cartridge or in a site:
# 
#   $IS_SHARE/system/cartridges/<cartridge>/release/urlrewrite/urlrewrite.properties
#   $IS_SHARE/sites/<site>/<version>/urlrewrite/urlrewrite.properties
#
# The effective rewrite rules for URLs pointing to a particular site are 
# merged from all urlrewrite.properties files of the assigned cartridges 
# (in reverse order) and of the URL target site.
#
# To use the rewrite rules, the built-in "RewriteRuleHandler" must be set
# as the site's URL rewrite handler.
# 
# 1. Open the Intershop Studio Site Explorer using the admin@root account.
#
# 2. Open the advanced properties view for the desired site.
#
# 3. Enter the following
#   
#   URL Rewrite Handler: com.intershop.beehive.core.internal.urlrewrite.RewriteRuleHandler
#   URL Rewriting:       Enabled
#   optional:
#   URL Rewrite Site Name: <shorter replacement for "<organization>-<channel>-Site">
#
# 4. Invalidate the page cache for this site and restart the server.
# 
# Now, selected links in the storefront are modified according to the 
# effective rewrite rule definitions.
#
# See the Intershop documentation for rewrite rule definition details
# and development hints.
#
# Global - Local Settings
# The following global settings (rules.<setting> = aaa) can be overridden for single
# rules (e.g. rule.1.<setting> = bbb)

##################################################################################################
# 
# rules.clear (true)
# Removes all previously loaded rules, allowing to start from scratch with the current
# urlrewrite.properties
#
##################################################################################################
rules.clear = true

##################################################################################################
# 
# rules.supportHttps (true)
# Perform URL Rewriting on links with protocol of type HTTPS
#
##################################################################################################
rules.supportHttps = true

##################################################################################################
# 
# rules.restrictToWhitelistedParameters (false)
# Enforces whitelisted parameters 
# 1. Defined within the pipelinewhitelistparameters.properties 
# 2. Specified for pipeline startnodes 
# This will remove unnecessary URL query parameters from the request to allow the page cache to
# work properly
#
##################################################################################################
rules.restrictToWhitelistedParameters = false

##################################################################################################
# 
# rules.debug (false)
# debug flag for global debugging (rules.debug = true), or local
# debugging (rule.<name>.debug=true)
#
##################################################################################################
rules.debug = false
# rule.home.debug = true

##################################################################################################
# 
# rules.replaceGermanUmlauts (true)
# To replace german umlauts with the latin character representation (ae/oe/ue/ss)
# must always be set to 'true' - this property set to 'false' is not supported
##################################################################################################
rules.replaceGermanUmlauts = true

##################################################################################################
# 
# rules.replaceSlashes (true)
# To replace '/' charaters with '-'
# Set to false where path hierarchies should be preserved:
# '/Monitors/LCD/19-Inches'
# Set to true where technical names would lead to unwanted path segments:
# 'PC 1GHz/2GB RAM/300GB HD' --> 'PC-1GHz-2GB-RAM-300GB-HD'
#
##################################################################################################
rules.replaceSlashes = true

##################################################################################################
# 
# rules.replaceSpecialCharacters (false)
# To replace special characters (all accented characters) by hyphen (-)
# Should be set to false where IDs or SKUs are used as parameter in URL pattern
# Set to true to replace special characters in object path expression with hypens (-)
#
##################################################################################################
rules.replaceSpecialCharacters = false

##################################################################################################
# 
# rules.forceLowerCase (false)
# To force lower case on _object path expressions_ when set to 
# true (#ProductBO:DisplayName#, #CategoryBO:DisplayName#)
#
##################################################################################################
rules.forceLowerCase = false

##################################################################################################
# 
# rules.fullCategoryPath (true)
# values=false/true, trigger between full category past and last category path for category access
# if DynamicPath is set
#
##################################################################################################
rules.fullCategoryPath = true

##################################################################################################
# 
# values=false/true, trigger between display (localized) name or name in category path for
# category access if DynamicPath is set
#
##################################################################################################
#rules.localizedCategoryPath = true # seting .replaceSlashes = 'false' is required (globally or localy in rules.catXX.)
#and switch properties in rule.xcat_levelx section below
rules.localizedCategoryPath = false

##################################################################################################
#  
# forceDomainsplittingHost (false)
# force switch to hostname configured in domainsplitting rules , even if current hostname is
# different this is used in xml sitemap creation and in language switch context, where the target
# or new hostname may differ from current hostname.
# in testing scenarios (where local etc/hosts entries are used for domainsplit testing) should be set to "false"
# to support rewriting without domainsplitting
##################################################################################################
rules.forceDomainsplittingHost = false

##################################################################################################
# 
# rules.shortpathpattern 
# shortpathpattern = pattern for the URL path. The path placeholder is subject of the defined
# rules later. The parameters (group, domain, locale, appurlid, currency) used in the shortpath
# can than be inserted as placeholders in the rule.<id>.longRequest (see rules).
#
##################################################################################################
rules.shortpathpattern = /${group}/${domain}/${locale}/${appurlid}/${currency}${path}
#rules.shortpathpattern = ${path}-${domain}-${group}-${locale}-${appurlid}-${currency}

##################################################################################################
##
## Domainsplitting
## Settings for Domainsplitting can be placed in here. 
## For production environments these domainsplitting.* are placed 
## in /share/system/config/cluster/urlrewrite.properties
##################################################################################################

domainsplitting.1.host = www.myshop.de
#domainsplitting.1.host = localhost 127.0.0.1:81 127.0.0.1:444
# alternate mapping for domain name - use SMC > Sitemanager > Site > define "URL Rewrite Site Name"
domainsplitting.1.shortpathpattern = /${domain}/${locale}${path}
#domainsplitting.1.domain = inSPIRED-inTRONICS-Site
domainsplitting.1.group = WFS
domainsplitting.1.currency = USD
## alternate mapping for currency
#domainsplitting.1.currency.1.value = USD
#domainsplitting.1.currency.1.replacement = usd
#domainsplitting.1.currency.2.value = EUR
#domainsplitting.1.currency.2.replacement = eur
domainsplitting.1.appurlid = -
## alternate mapping for appurlid
#domainsplitting.1.appurlid.1.value = -
#domainsplitting.1.appurlid.1.replacement = default

#domainsplitting.1.locale = en_US
## Alternate locale mapping
domainsplitting.1.locale.1.value = en_US
domainsplitting.1.locale.1.replacement = en

######################################################################################################################
##
## Rules
##
######################################################################################################################

## Home
rule.home.select            = ${action}
rule.home.selectMatch       = ^ViewHomepage-Start$
rule.home.shortPath         = /
rule.home.shortPathMatch    = ^([\\/]?)$
rule.home.longRequest       = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewHomepage-Start

## Cached Homepage
#rule.homepage.select          = ${action}
#rule.homepage.selectMatch     = ^ViewHomepage-DisplayCachedHomepage$
#rule.homepage.shortPath       = /index
#rule.homepage.shortPathMatch  = ^/index$
#rule.homepage.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewHomepage-DisplayCachedHomepage

##
## Sitemap links
##

## Sitemap Home
rule.sitemap.select           = ${action}
rule.sitemap.selectMatch      = ^ViewSitemap-Start$
rule.sitemap.shortPath        = /sitemap
rule.sitemap.shortPathMatch   = ^/sitemap$
rule.sitemap.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSitemap-Start

## Sitemap category
rule.sitemapCategory.select         = ${action}/${p.CatalogCategoryBOName}/
rule.sitemapCategory.selectMatch    = ^ViewSitemap-BrowseCategory/([\\w\\-\\.]+)/$
rule.sitemapCategory.shortPath      = /sitemap-category/${p.CatalogCategoryBOName}
rule.sitemapCategory.shortPathMatch = ^/sitemap-category/([\\w\\-\\.]+)$
rule.sitemapCategory.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSitemap-BrowseCategory?CatalogCategoryBOName=$1

## Sitemap category ranges
rule.sitemapRange.select           = ${action}/${p.Range}/
rule.sitemapRange.selectMatch      = ^ViewSitemap-BrowseCategoryRange/.+/$
rule.sitemapRange.shortPath        = /sitemap-range
rule.sitemapRange.shortPathMatch   = ^/sitemap-range$
rule.sitemapRange.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSitemap-BrowseCategoryRange

## The "Sitemap" productlist link
rule.sitemapList.select          = ${action}/#CategoryBO:Name#/
rule.sitemapList.selectMatch      = ^ViewSitemap-ProductList/.+/$
rule.sitemapList.shortPath       = /sitemap-products/#CategoryBO:CatalogCategoryPath:ReversePath:DynamicPath#${d.CategoryName}${d.CatalogID}${d.CatalogCategoryID}

# expand rule for level 3 and deeper
rule.sitemapList1.shortPathMatch  = ^/sitemap-products/([\\w\\-]+)/(.*)/(.*)$
rule.sitemapList1.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSitemap-ProductList?CategoryName=$3&CatalogID=$1

# expand rule for level 2, 
# tolerant rule for special characters in category id
rule.sitemapList2.shortPathMatch  = ^/sitemap-products/([\\w\\-]+)/(.*)$
rule.sitemapList2.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSitemap-ProductList?CategoryName=$2&CatalogID=$1

# Sitemap URLs
# correct: /sitemap-mysitemap-0 <= can contain urls starting with www.myshop.de
# wrong:   /sitemap/mysitemap  <= this must contains urls starting with www.myshop.de/mysitemap/  

## map sitemap-<SyndicationID>-<SiteMapFileNo>
rule.sitemapFileXML1.select           = ${action}/${p.FilePattern}/${p.SyndicationID}/${p.SiteMapFileNo}/
rule.sitemapFileXML1.selectMatch      = ^ViewSiteMapXML-Start/([\\w\\-]+)/([\\w\\-]+)/([\\d]+)/$
rule.sitemapFileXML1.shortPath        = /sitemap-${p.FilePattern}-${p.SyndicationID}-${p.SiteMapFileNo}
rule.sitemapFileXML1.shortPathMatch   = ^/sitemap-([\\w\\-]+)-([\\w\\-]+)-([\\d]+)$
rule.sitemapFileXML1.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSiteMapXML-Start?FilePattern=$1&SyndicationID=$2&SiteMapFileNo=$3

rule.sitemapFileXML2.select           = ${action}/${p.SyndicationID}/${p.SiteMapFileNo}/
rule.sitemapFileXML2.selectMatch      = ^ViewSiteMapXML-Start/([\\w\\-]+)/([\\d]+)/$
rule.sitemapFileXML2.shortPath        = /sitemap-${p.SyndicationID}-${p.SiteMapFileNo}
rule.sitemapFileXML2.shortPathMatch   = ^/sitemap-([\\w\\-]+)-([\\d]+)$
rule.sitemapFileXML2.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSiteMapXML-Start?SyndicationID=$1&SiteMapFileNo=$2

## map sitemap-<SyndicationID>
rule.sitemapFileXML3.select           = ${action}/${p.SyndicationID}/
rule.sitemapFileXML3.selectMatch      = ^ViewSiteMapXML-Start/([\\w\\-]+)/$
rule.sitemapFileXML3.shortPath        = /sitemap-${p.SyndicationID}
rule.sitemapFileXML3.shortPathMatch   = ^/sitemap-([\\w\\-]+)$
rule.sitemapFileXML3.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSiteMapXML-Start?SyndicationID=$1

##
## Category links
##

## rule for the breadcrumb category links.
#rule.cat11.debug = true
#rule.cat11.replaceSlashes  = false
rule.cat11.select          = ${action}/#parents:Name#/
rule.cat11.selectMatch     = ^ViewStandardCatalog-Browse/.+/$
rule.cat11.shortPath       = /#parents:CatalogCategoryPath:ReversePath:DynamicPath#${d.CatalogID}${d.CategoryName}${d.CatalogCategoryID}

## rule for the top menu and sitemap category links.
#rule.cat20.replaceSlashes  = false
rule.cat20.select          = ${action}/#SubCategorySecondTier:ParentCatalogCategoryBO:Name#/#SubCategorySecondTier:Name#/
rule.cat20.selectMatch     = ^ViewStandardCatalog-Browse/.+/.+/$
rule.cat20.shortPath       = /#SubCategorySecondTier:ParentCatalogCategoryBO:Name#/#SubCategorySecondTier:Name#${d.CatalogID}${d.CategoryName}${d.CatalogCategoryID}

## rule for the left panel category and sitemap navigation.
#rule.cat32.replaceSlashes  = false
rule.cat32.select          = ${action}/#SubCategoryBO:Name#/
rule.cat32.selectMatch     = ^ViewStandardCatalog-Browse/.+/$
rule.cat32.shortPath       = /#SubCategoryBO:CatalogCategoryPath:ReversePath:DynamicPath#${d.CategoryName}${d.CatalogID}${d.CatalogCategoryID}

#rule.cat53.replaceSlashes  = false
rule.cat53.select          = ${action}/#CategoryBO:Name#/
rule.cat53.selectMatch     = ^ViewStandardCatalog-Browse/.+/$
rule.cat53.shortPath       = /#CategoryBO:CatalogCategoryPath:ReversePath:DynamicPath#${d.CatalogID}${d.CategoryName}${d.CatalogCategoryID}${d.CategoryDomainName}

# activate only when - rules.localizedCategoryPath = true
# this properties are only used internally - do not change configuration values
#rule.cat65.replaceSlashes  = false
#rule.cat65.select          = ${action}/#ResolveLocalizedPathCategoryBO:Name#/
#rule.cat65.selectMatch     = ^ViewStandardCatalog-ResolveLocalizedPath/.+/$
#rule.cat65.shortPath       = /#ResolveLocalizedPathCategoryBO:CatalogCategoryPath:ReversePath:DynamicPath#${d.CatalogID}${d.CategoryName}${d.CatalogCategoryID}

# category expansion rules, use rule with (.*) to handle unwritten special characters in category names but exclude some invalid symbols with expression below:
# [^\\.\\,\\/\\\\\\'\\;\\<\\>\\?\\|\\"\\:\\]\\[\\{\\}\\=\\+\\(\\)\\*\\&\\^\\%\\$\\#\\@\\!\\`\\~] - exclude symbols . , / \ ' ; < > ? | " : ] [ { } = + ( ) * & ^ % $ # @ ! ` ~ from category name

# activate when -  rules.localizedCategoryPath = false
rule.xcat_level1.shortPathMatch  = /([\\w\\-]+)/(.*)/(.[^\\.\\,\\/\\\\\\'\\;\\<\\>\\?\\|\\"\\:\\]\\[\\{\\}\\=\\+\\(\\)\\*\\&\\^\\%\\$\\#\\@\\!\\`\\~]*)$
rule.xcat_level1.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStandardCatalog-Browse?CategoryName=$3&CatalogID=$1

# activate when -  rules.localizedCategoryPath = false
rule.xcat_level2.shortPathMatch  = /([\\w\\-]+)/(.[^\\.\\,\\/\\\\\\'\\;\\<\\>\\?\\|\\"\\:\\]\\[\\{\\}\\=\\+\\(\\)\\*\\&\\^\\%\\$\\#\\@\\!\\`\\~]*)$
rule.xcat_level2.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStandardCatalog-Browse?CategoryName=$2&CatalogID=$1

# activate when -  rules.localizedCategoryPath = false
rule.xcat_levelx.shortPathMatch  = /([\\w\\-]+)$
rule.xcat_levelx.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStandardCatalog-Browse?CategoryName=$1&CatalogID=$1

# activate when - rules.localizedCategoryPath = true
# Ensure that localized category path category names are unique 
# and set rules.replaceSlashes = false or individual rule.catXX.replaceSlashes = false
#rule.xcat_levelx.shortPathMatch  = /([\\w\\-\\/]+)$
#rule.xcat_levelx.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStandardCatalog-ResolveLocalizedPath?Path=$1

##
## Paging links
##

## Product paging 
rule.pp.select         = ${action}/${p.PageNumber}/
rule.pp.selectMatch    = ^ViewStandardCatalog-ProductPaging/.+/$
rule.pp.shortPath      = /paging/page${p.PageNumber}
rule.pp.shortPathMatch = /paging/page([0-9]*)$
rule.pp.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStandardCatalog-ProductPaging?PageNumber=$1

## browse by search paging 
rule.sp.select         = ${action}/{p.PageNumber}/
rule.sp.selectMatch    = ^ViewParametricSearch-ProductPaging/.+/$
rule.sp.shortPath      = /filter/${p.PageNumber}
rule.sp.shortPathMatch  = /filter/(\\d+)$
rule.sp.longRequest     = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewParametricSearch-ProductPaging?PageNumber=$1

# filter on category page
rule.filter.select         = ${action}/${p.SearchParameter}/
rule.filter.selectMatch    = ^ViewParametricSearch-Browse/.+/$
rule.filter.shortPath      = /filter
rule.filter.shortPathMatch = ^/filter$
rule.filter.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewParametricSearch-Browse

# filter on category page
rule.filter.select         = ${action}/${p.SearchParameter}/
rule.filter.selectMatch    = ^ViewStandardCatalog-Browse/.+/$
rule.filter.shortPath      = /filter
rule.filter.shortPathMatch = ^/filter$
rule.filter.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStandardCatalog-Browse

##
## Product links
##

## Product links with CategoryID/SKU
rule.psku0.select 				  = ${action}/#CanonicalLinkForProduct#/
rule.psku0.selectMatch            = ^ViewProduct-Start/.+/$
rule.psku0.shortPath              = /#ProductBO:DefaultCatalogCategory:CatalogCategoryPath:ReversePath:DynamicPath#/#ProductBO:Name#-zid${p.SKU}${d.CategoryName}${d.CatalogID}${d.CatalogCategoryID}

rule.psku01.select 				  = ${action}/#CanonicalLinkForMasteredProduct#/
rule.psku01.selectMatch           = ^ViewProduct-Start/.+/$
rule.psku01.shortPath             = /#ProductBO:ProductMaster:DefaultCatalogCategory:CatalogCategoryPath:ReversePath:DynamicPath#/#ProductBO:ProductMaster:Name#-zid${p.SKU}${d.CategoryName}${d.CatalogID}${d.CatalogCategoryID}

rule.psku1.select 				  = ${action}/#CategoryBO#/
rule.psku1.selectMatch            = ^ViewProduct-Start/.+/$
rule.psku1.shortPath              = /#CategoryBO:CatalogCategoryPath:ReversePath:DynamicPath#/#ProductBO:Name#-zid${p.SKU}${d.CategoryName}${d.CatalogID}${d.CatalogCategoryID}

rule.psku2.select                 = ${action}/#ProductBO:DefaultCatalogCategory#/
rule.psku2.selectMatch            = ^ViewProduct-Start/.+/$
rule.psku2.shortPath              = /#ProductBO:DefaultCatalogCategory:CatalogCategoryPath:ReversePath:DynamicPath#/#ProductBO:Name#-zid${p.SKU}${d.CategoryName}${d.CatalogID}${d.CategoryID}${d.CategoryDomainName}

rule.psku3.select                 = ${action}/#ProductBO#/
rule.psku3.selectMatch            = ^ViewProduct-Start/.+/$
rule.psku3.shortPath              = /#ProductBO:Name#-zid${p.SKU}${d.CategoryName}${d.CatalogID}${d.CategoryID}${d.CategoryDomainName}

rule.psku4.select                 = ${action}/${p.SKU}/
rule.psku4.selectMatch            = ^ViewProduct-Start/.+/$
rule.psku4.shortPath              = /-zid${p.SKU}${d.CategoryName}${d.CatalogID}${d.CategoryID}

# product expansion rules
rule.psku_level1.shortPathMatch   = ^/([\\w\\-]+)/(.*)/(.*)/(.*)/(.*)-zid(.+)$
rule.psku_level1.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProduct-Start?SKU=$6&CatalogID=$1&CategoryName=$4

rule.psku_level2.shortPathMatch   = ^/([\\w\\-]+)/(.*)/(.*)/(.*)-zid(.+)$
rule.psku_level2.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProduct-Start?SKU=$5&CatalogID=$1&CategoryName=$3

rule.psku_level3.shortPathMatch   = ^/([\\w\\-]+)/(.*)/(.*)-zid(.+)$
rule.psku_level3.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProduct-Start?SKU=$4&CatalogID=$1&CategoryName=$2

rule.psku_level4.shortPathMatch   = ^/([\\w\\-]+)/(.*)-zid(.+)$
rule.psku_level4.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProduct-Start?SKU=$3&CatalogID=$1&CategoryName=$1

rule.psku_level5.shortPathMatch   = -zid(.+)$
rule.psku_level5.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProduct-Start?SKU=$1

##
## landing pages rule
##
rule.landing.select         = ${action}
rule.landing.selectMatch    = ^ViewLandingPage-ProcessContentURL$
rule.landing.shortPath      = /pages-${p.File}
rule.landing.shortPathMatch = ^/pages-(.*)$
rule.landing.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewLandingPage-ProcessContentURL?File=$1

##
## Cart & Checkout Links
##
rule.cart.select                  = ${action}
rule.cart.selectMatch             = ^ViewCart-View$
rule.cart.shortPath               = /cart
rule.cart.shortPathMatch          = ^/cart$
rule.cart.longRequest             = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewCart-View

##
## User Account Links
##
rule.ac.select                    = ${action}
rule.ac.selectMatch               = ^ViewUserAccount-Start$
rule.ac.shortPath                 = /account
rule.ac.shortPathMatch            = ^/account$
rule.ac.longRequest               = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewUserAccount-Start

rule.register.select              = ${action}
rule.register.selectMatch         = ^ViewUserAccount-ShowRegister$
rule.register.shortPath           = /register
rule.register.shortPathMatch      = ^/register$
rule.register.longRequest         = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewUserAccount-ShowRegister

rule.login.select                 = ${action}
rule.login.selectMatch            = ^ViewUserAccount-ShowLogin$
rule.login.shortPath              = /login
rule.login.shortPathMatch         = ^/login$
rule.login.longRequest            = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewUserAccount-ShowLogin

rule.logout.select                = ${action}
rule.logout.selectMatch           = ^ViewUserAccount-LogoutUser$
rule.logout.shortPath             = /logout
rule.logout.shortPathMatch        = ^/logout$
rule.logout.longRequest           = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewUserAccount-LogoutUser

##
## Others
##
# change to target Locale and Currency (set-up for en_US and de_DE)
rule.country.select               = ${action}/${p.LocaleID}/
rule.country.selectMatch          = ^ViewSwitchLocale-Start/(.*)/$
rule.country.shortPath            = /switch-country
rule.country.shortPathMatch       = ^/switch-country-(en_US|de_DE)$
rule.country.longRequest          = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSwitchLocale-Start?LocaleID=$1

# Change Locale to target locale whereby the currency remains the same (set-up for en_US and de_DE)
rule.language.select               = ${action}/${p.LocaleID}/
rule.language.selectMatch          = ^ViewSwitchLocale-Start/(.*)/$
rule.language.shortPath            = /switch-language-${p.LocaleID}
rule.language.shortPathMatch       = ^/switch-language-(en_US|de_DE)$
rule.language.longRequest          = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewSwitchLocale-Lanugage?LocaleID=$1

# comparing 
rule.pcomp.select                 = ${action}
rule.pcomp.selectMatch            = ^ViewProductCompare-Show$
rule.pcomp.shortPath              = /product-compare
rule.pcomp.shortPathMatch         = ^/product-compare$
rule.pcomp.longRequest            = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProductCompare-Show

rule.pcomp-add.select             = ${action}
rule.pcomp-add.selectMatch        = ^ViewProductCompare-Add$
rule.pcomp-add.shortPath          = /product-add
rule.pcomp-add.shortPathMatch     = ^/product-add$
rule.pcomp-add.longRequest        = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewProductCompare-Add

# Storefinder
rule.store.select                 = ${action}
rule.store.selectMatch            = ^ViewStoreFinder-Start$
rule.store.shortPath              = /store-finder
rule.store.shortPathMatch         = ^/store-finder$
rule.store.longRequest            = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewStoreFinder-Start

# Contact
rule.contact.select               = ${action}
rule.contact.selectMatch          = ^ViewContact-Start$
rule.contact.shortPath            = /contact
rule.contact.shortPathMatch       = ^/contact$
rule.contact.longRequest          = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContact-Start

# Newsletter
rule.newsletter.select            = ${action}
rule.newsletter.selectMatch       = ^ViewEmailSignup-Start$
rule.newsletter.shortPath         = /newsletter
rule.newsletter.shortPathMatch    = ^/newsletter$
rule.newsletter.longRequest       = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewEmailSignup-Start

# Direct link for terms and conditions page
rule.page1-tc.select              = ${action}/${p.PageletEntryPointID}/
rule.page1-tc.selectMatch         = ^ViewContent-Start/systempage\\.termsAndConditions\\.pagelet2-Page/$
rule.page1-tc.shortPath           = /terms-and-conditions${d.PageletEntryPointID}
rule.page1-tc.shortPathMatch      = ^/terms-and-conditions$
rule.page1-tc.longRequest         = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContent-Start?PageletEntryPointID=systempage.termsAndConditions.pagelet2-Page

# Index page for helpdesk
rule.page3-helpIndex.select           = ${action}/${p.PageletEntryPointID}/
rule.page3-helpIndex.selectMatch      = ^ViewContent-Start/systempage\\.helpdesk\\.index\\.pagelet2-Page/$
rule.page3-helpIndex.shortPath        = /helpdesk${d.PageletEntryPointID}
rule.page3-helpIndex.shortPathMatch   = ^/helpdesk$
rule.page3-helpIndex.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContent-Start?PageletEntryPointID=systempage.helpdesk.index.pagelet2-Page

# Contact us page for helpdesk
rule.page3-helpContactUs.select            = ${action}/${p.PageletEntryPointID}/
rule.page3-helpContactUs.selectMatch       = ^ViewContent-Start/systempage\\.helpdesk\\.contactUs.pagelet2-Page/$
rule.page3-helpContactUs.shortPath         = /helpdesk/contact-us${d.PageletEntryPointID}
rule.page3-helpContactUs.shortPathMatch    = ^/helpdesk/contact-us$
rule.page3-helpContactUs.longRequest       = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContent-Start?PageletEntryPointID=systempage.helpdesk.contactUs.pagelet2-Page

# Generically split page.helpdesk.<name> into /helpdesk/<name>
rule.page4-helpPage.select            = ${action}/${p.PageletEntryPointID}/
rule.page4-helpPage.selectMatch       = ^ViewContent-Start/page\\.helpdesk\\.([\\w]+)/$
rule.page4-helpPage.shortPath         = /helpdesk/$1${d.PageletEntryPointID}
rule.page4-helpPage.shortPathMatch    = ^/helpdesk/([\\w]+)$
rule.page4-helpPage.longRequest       = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContent-Start?PageletEntryPointID=page.helpdesk.$1

# Customers browsing history (recently viewed items)
rule.page5-rcvi.select            = ${action}/${p.PageletEntryPointID}/
rule.page5-rcvi.selectMatch       = ^ViewContent-Start/systempage\.browsingHistory\.pagelet2-Page/$
rule.page5-rcvi.shortPath         = /browsing-history${d.PageletEntryPointID}
rule.page5-rcvi.shortPathMatch    = ^/browsing-history$
rule.page5-rcvi.longRequest       = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContent-Start?PageletEntryPointID=systempage.browsingHistory.pagelet2-Page

# Generic rewrite for any cms page entry point
rule.page99-page.select           = ${action}/#PageletEntryPoint:DisplayName#/
rule.page99-page.selectMatch      = ^ViewContent-Start/.+$
rule.page99-page.shortPath        = /#PageletEntryPoint:DisplayName#-cms-${p.PageletEntryPointID}
rule.page99-page.shortPathMatch   = -cms-(.+)$
rule.page99-page.longRequest      = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewContent-Start?PageletEntryPointID=$1

# navigation for search pages
rule.parametric-search-01.select            = ${action}/${p.SearchTerm}/
rule.parametric-search-01.selectMatch       = ^ViewParametricSearch-Browse/.+/$
rule.parametric-search-01.shortPath         = /search/${p.SearchTerm}
rule.parametric-search-01.shortPathMatch    = ^/search/(.+)$
rule.parametric-search-01.longRequest       = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewParametricSearch-Browse?SearchTerm=$1

# pagination for search pages
rule.parametric-search-product-01.select            = ${action}/${p.SearchTerm}/
rule.parametric-search-product-01.selectMatch       = ^ViewParametricSearch-ProductPaging/.+/$
rule.parametric-search-product-01.shortPath         = /search-paging/${p.SearchTerm}
rule.parametric-search-product-01.shortPathMatch    = ^/search-paging/(.+)$
rule.parametric-search-product-01.longRequest   = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewParametricSearch-ProductPaging?SearchTerm=$1

# general fallback rule to rewrite all remaining View and Get pipelines
# Please enable both rules, since ViewData-Start requires a custom rewriting parameter (ContinuousID)

# ViewData-Start rule (must first be checked)
#rule.aviewdata.select         = ${action}/#ContinuousID#/
#rule.aviewdata.selectMatch    = ^ViewData-Start/([0-9]+)/$
#rule.aviewdata.shortPath      = /viewdata/#ContinuousID#
#rule.aviewdata.shortPathMatch = ^/viewdata/([0-9]+)$
#rule.aviewdata.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/ViewData-Start/$1

# generic rule (is the very _last_ to be executed) - currently handles get and view pipelines
#rule.xx-fallback.select         = ${action}
#rule.xx-fallback.selectMatch    = ^(View[\\w]+|Get[\\w]+)\\-([\\w]+)$
#rule.xx-fallback.shortPath      = /actions/$1-$2
#rule.aa-fallback.shortPathMatch = ^/actions/(View[\\w]+|Get[\\w]+)\\-([\\w]+)$
#rule.aa-fallback.longRequest    = /${group}/${domain}/${locale}/${appurlid}/${currency}/$1-$2